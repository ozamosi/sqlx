name: SQLx

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  check:
    name: Check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        runtime: [async-std]
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-check-${{ matrix.runtime }}-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: >
            --manifest-path sqlx-core/Cargo.toml
            --no-default-features
            --features offline,all-databases,all-types,migrate,runtime-${{ matrix.runtime }}

      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: >
            --no-default-features
            --features offline,all-databases,all-types,migrate,runtime-${{ matrix.runtime }},macros

  test:
    name: Unit Test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-test-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: >
            --manifest-path sqlx-core/Cargo.toml
            --features offline,all-databases,all-types

  postgres:
    name: Postgres
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        postgres: [12]
        runtime: [async-std]
    needs: check
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-postgres-${{ matrix.runtime }}-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: >
            --features postgres,all-types

      - run: docker-compose -f tests/docker-compose.yml run -d -p 5432:5432 postgres_${{ matrix.postgres }}
      - run: sleep 10

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: >
            --no-default-features
            --features any,postgres,macros,all-types,runtime-${{ matrix.runtime }}
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/sqlx

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: >
            --no-default-features
            --features any,postgres,macros,migrate,all-types,runtime-${{ matrix.runtime }}
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/sqlx?sslmode=verify-ca&sslrootcert=.%2Ftests%2Fcerts%2Fca.crt
